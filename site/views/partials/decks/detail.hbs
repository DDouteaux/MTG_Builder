<script>
    var countChangeTimers = {};
    function onInputCountChange(cardId, count, deckPart) {
        clearTimeout(countChangeTimers[cardId]);
        countChangeTimers[cardId] = setTimeout(function() {
            sendNewCountToBack(cardId, count, deckPart);
        }, 1000)
    }

    function sendNewCountToBack(cardId, count, deckPart) {
        $.ajax({
            url: '/decks/updateCardCount',
            type: 'POST',
            data: {
                deckId: window.location.href.substring(window.location.href.lastIndexOf('/') + 1),
                cardId: cardId,
                count: count,
                deckPart: deckPart
            },
            success: function(response) {
                displayInfoOk(response.message)
                $('#' + $('#card-id-to-remove').val() + '-removable').remove();
                finalizeDeckParts();
                $('#closeRemoveCard').click();
            },
            error: function(err) {
                if (err.status == 401) {
                    window.location.replace('/?error=' + err.responseJSON.error);
                } else {
                    displayError(err.responseJSON.error);
                    $('#closeRemoveCard').click();
                }
            }
        });
    }

    function finalCountChange(div) {
        countChange(div, 0);
    }

    function countChange(div, modifier) {
        inputDiv = $(div).parent().parent().find('input');
        value = parseInt(inputDiv.val());
        // Si modifier = 0, on est en train d'éditer la valeur à la main, et il est alors
        // possible que le contenu de l'input soit vide. Dans ce cas, ne pas mettre à jour.
        if (modifier != 0 || inputDiv.val() != "") {
            if (isNaN(value)) {
                newValue = 1;
            } else {
                newValue = value + modifier
                if (newValue < 0) {
                    newValue = 0;
                }
            }
            inputDiv.val(newValue);
            onInputCountChange(inputDiv.attr('name').substring(6), newValue, inputDiv.data('deck-part'));
        }
    }

    function showHideContent(div) {
        $(div).parent().find('.deck-part').toggle()
    }

    function finalizeDeckParts() {
        $('.deck-part').each(function (index) {
            if ($(this).html().trim() == "") {
                $(this).parent().attr('style', 'display: none')
            } else {
                {{#if decoded}}
                    $(this).parent().find('.deck-part-count')[0].innerText = $(this).find('.input-count').toArray().reduce((acc, div) => {return acc+parseInt(div.value)}, 0);
                {{else}}
                    $(this).parent().find('.deck-part-count')[0].innerText = $(this).find('.input-count').toArray().reduce((acc, div) => {return acc+parseInt(div.innerText)}, 0);
                {{/if}}
            }
            $('#total-count').html($('.deck-part-count').toArray().reduce((acc, div) => {return acc+parseInt(div.innerText)}, 0));
        })
    }

    $(document).ready(() => {
        selectedFormat = "{{deck.format}}"
        Object.entries(FormatsEnum).forEach(key => {
            if (key[0] === selectedFormat) {
                $('#format').append('<option selected value="' + key[0] + '">' + key[1].display + '</option>')
            } else {
                $('#format').append('<option value="' + key[0] + '">' + key[1].display + '</option>')
            }
        });

        $('#deck-format-display').html(FormatsEnum[$('#deck-format-display').html()].display);
        $('#deck-public-display').html($('#deck-public-display').html() === "true" ? "Oui" : "Non");
        $('#deck-state-display').html(StatesEnum[$('#deck-state-display').html()]);

        selectedState = "{{deck.state}}"
        Object.entries(StatesEnum).forEach(key => {
            if (key[0] === selectedState) {
                $('#state').append('<option selected value="' + key[0] + '">' + key[1] + '</option>')
            } else {
                $('#state').append('<option value="' + key[0] + '">' + key[1] + '</option>')
            }
        });

        finalizeDeckParts();

        {{#if user.decoded}}
            $('.show-edit').on('click', function(event) {
                toHide = $(event.target);
                toShow = $(toHide.parent().find('.edit-toggle').filter(div => $(div) != toHide)[0]);
                toShow.toggle();
                toHide.toggle();
                if (toShow.is("input") || toShow.is("textarea")) {
                    toShow.focus();
                    tmpStr = toShow.val();
                    toShow.val('');
                    toShow.val(tmpStr);
                }
            })

            $('.edit-toggle').on('change', function(event) {
                field_to_update = $(event.currentTarget).attr('id');
                value_to_update = $(event.currentTarget).val();
                ajax_body = {};
                ajax_body[field_to_update] = value_to_update;
                ajax_body["deckId"] = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);

                toHide = $(event.target);
                field = toHide.attr('id')
                toShow = $(toHide.parent().find('.show-edit').filter(div => $(div) != toHide)[0]);

                $.ajax({
                    url: '/decks/updateFields',
                    type: 'POST',
                    data: ajax_body,
                    success: function(response) {
                        displayInfoOk(response.message);
                        if (typeof field !== "undefined" && field != null) {
                            if (field === 'state') {
                                toShow.html(StatesEnum[toHide.val()]);
                            } else if (field === 'format') {
                                toShow.html(FormatsEnum[toHide.val()].display);
                            } else if (field === 'public') {
                                toShow.html(toHide.val() === "true" ? "Oui" : "Non");
                            }
                        } else {
                            if (toHide.val().trim() === "") {
                                toShow.html("&nbsp");
                            } else {
                                toShow.html(toHide.val());
                            }
                        }
                        toShow.toggle();
                        toHide.toggle();
                    },
                    error: function(err) {
                        if (err.status == 401) {
                            window.location.replace('/?error=' + err.responseJSON.error);
                        } else {
                            displayError(err.responseJSON.error);
                        }
                        toHide.val(toShow.html());
                        toShow.toggle();
                        toHide.toggle();
                    }
                });
            })
        {{/if}}
    });
</script>

<div class="row">
    <div class="col-8">
        <h1 class="text-left">
            Deck : {{ deck.title }} (<div id="total-count" style="display: inline"></div> cartes)
        </h1>
    </div>
    <div class="col-4">
        <button id="returnToDeckList" type="button" class="btn btn-default float-right" onclick="location.href='/user/decks'">
            <i class="far fa-list-alt"></i>&nbsp;Retour à la liste
        </button>
    </div>
</div>
<hr/>

<div class="container-fluid">
    <div class="row">
        <div class="col-4" style="font-size: 11pt">
            {{#each display_deck_parts_enum}}
                {{>
                    decks/detail/deck_part deckPartTitle=this.deckPartTitle typeLineFilter=this.typeLineFilter
                                        keyInDeckParts=this.keyInDeckParts valueInDeckParts=this.valueInDeckParts
                                        cards=../cards deck=../deck symbols=../symbols decoded=../decoded
                }}
            {{/each}}
        </div>
        <div class="col-8">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="deckDetail-tab" data-toggle="tab" href="#deckDetail" role="tab" aria-controls="deckDetail" aria-selected="false">Informations</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="addCard-tab" data-toggle="tab" href="#addCard" role="tab" aria-controls="addCard" aria-selected="true">Ajouter des cartes</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="stat-tab" data-toggle="tab" href="#stat" role="tab" aria-controls="stat" aria-selected="true">Statistiques</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane fade show" id="addCard" role="tabpanel" aria-labelledby="addCard-tab">
                    <div class="mt-3"></div>
                    Ajouter des cartes au deck
                </div>
                <div class="tab-pane fade show active" id="deckDetail" role="tabpanel" aria-labelledby="deckDetail-tab">
                    <div class="mt-3"></div>
                    <div class="form-group row">
                        <label for="title" class="col-sm-3">Titre</label>
                        <div class="col-sm-9">
                            <input id="title" class="edit-toggle form-control" style="display: none" name="title" placeholder="Titre" value="{{deck.title}}">
                            <div class="edit-toggle show-edit w-100">{{deck.title}}</div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="format" class="col-sm-3">Format</label>
                        <div class="col-sm-9">
                            <select id="format" name="format" style="display: none" class="form-control edit-toggle">
                            </select>
                            <div class="edit-toggle show-edit w-100" id="deck-format-display">{{deck.format}}</div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="state" class="col-sm-3">État</label>
                        <div class="col-sm-9">
                            <select id="state" name="state" style="display: none" class="form-control edit-toggle">
                            </select>
                            <div class="edit-toggle show-edit w-100" id="deck-state-display">{{deck.state}}</div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="source" class="col-sm-3">Source</label>
                        <div class="col-sm-9">
                            <input id="source" style="display: none" class="form-control edit-toggle" name="source" placeholder="Source" value="{{deck.source}}">
                            <div class="edit-toggle show-edit w-100">
                                {{deck.source}}
                                {{#unless deck.source}}
                                    &nbsp;
                                {{/unless}}
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="description" class="col-sm-3">Description</label>
                        <div class="col-sm-9">
                            <textarea id="description" style="display: none" class="form-control edit-toggle" name="description" rows="3">{{ deck.description }}</textarea>
                            <div class="edit-toggle show-edit w-100">
                                {{deck.description}}
                                {{#unless deck.description}}
                                    &nbsp;
                                {{/unless}}
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="public" class="col-sm-3">Public</label>
                        <div class="col-sm-9">
                            <select id="public" name="public" style="display: none" class="form-control edit-toggle">
                                <option value="true" {{#if deck.public}}selected{{/if}}>Oui</option>
                                <option value="false" {{#unless deck.public}}selected{{/unless}}>Non</option>
                            </select>
                            <div class="edit-toggle show-edit w-100" id="deck-public-display">{{deck.public}}</div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="createdAt" class="col-sm-3">Créé le</label>
                        <div class="col-sm-9">
                            <div>
                                {{{displayDate deck.creationDate }}}
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="modifiedAt" class="col-sm-3">Mis à jour le</label>
                        <div class="col-sm-9">
                            {{{displayDate deck.lastUpdateDate }}}
                        </div>
                    </div>  
                    <div class="form-group row">
                        <label for="derivedFrom" class="col-sm-3">Dérivé de</label>
                        <div class="col-sm-9">
                            {{ deck.derivedFrom }}
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade show" id="stat" role="tabpanel" aria-labelledby="stat-tab">
                    <div class="mt-3"></div>
                    {{> decks/detail/deck_charts}}
                </div>
            </div>
        </div>
    </div>
</div>

{{#if decoded}}
    {{> modals/remove_from_deck/remove_from_deck_modal}}
{{/if}}